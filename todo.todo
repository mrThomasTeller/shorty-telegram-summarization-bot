Release 0.4:
  ✔ зарефакторить на RxJS @done(23-10-04 13:15)
  ✔ настроить резервное копирование БД @done(23-10-04 17:54)
  ✔ логи @done(23-10-08 15:11)
  ✔ вынести тексты в отдельные файлы @done(23-10-02 16:05)
  ✔ strict eslint rules (any, cognitive complexity, etc) @done(23-09-26 22:10)
  ✔ update prisma @done(23-09-26 22:10)
  ✔ просмотр логов с телефона @done(23-10-09 20:43)
  ✔ писать логи в файлы @done(23-10-09 20:43)

Release 0.5:
  ✔ не делать выжимку если сообщений меньше 10 @done(23-10-11 16:43)
  ✔ бот должен собирать сообщения начиная с последнего запроса @done(23-10-17 12:48)
  ✔ ограничить количество запросов к боту @done(23-10-18 12:04)
  ✔ запретить созадние нескольких summary одновременно @done(23-10-18 14:48)
  ✔ уменьшить количество пунктов если сообщений мало @done(23-10-18 21:09)

Release 0.6:
  - удалить точку в конце выжимки из одного пункта @scheduled(23-10-19)
  - возможность сообщить об ошибке или отправить предложение по улучшению @scheduled(23-10-19)
  - выяснить можно ли спрашивать про свои чаты из личного диалога (попробовать административные права) @scheduled(23-10-19)
  - шифрование сообщений @scheduled(23-10-19)

Release 0.7 (открытая бета):
  - приветственное сообщение: encode, share, issues+предложения (https://fider.io/, discord, google form, tg), donation @scheduled(23-10-20)
  - мониторинг состояния: количество потраченных денег, в скольких чатах состоит, активность пользователей, ошибки @scheduled(23-10-20)
  - поставь авторизацию на dozzle @scheduled(23-10-21)
  - регулярный Пинг и уведомления на телефон о падении бота @scheduled(23-10-21)

Release 0.8 (открытая бета второго приложения):
  - сделать второе приложения с забавными вопросами по диалогу (может даже несколько приложений)

Release 0.9:
  - попробовать увеличить размер промпта
  - проработать вопрос харнения у себя перс. данных
  - подробная справка
  - проработать вопрос с рекламой

Backlog:
  - сделать ограничение по размеру одного пункта
  - очистка базы данных
  - рассылка новостей
  - настроить подключение к БД по ssh/ssl (не RSA)
  - настроить CI/CD
  - функция чтения сообщений за определенный день/время
  - поддержка id чатов строк
  - сделать ChangeLog из коммитов
  - сделать id отдельными типами
  - tg timestamp отдельным типом
  - собрать образ pgbackup из https://github.com/mrThomasTeller/docker-postgres-backup-local
  - Сделать интеграционные тесты для логов
  - постепенное создание выжимки (gpt progress)
  - удалять из БД удалённые сообщения, редактировать отредактированные
  - удалять из БД сообщения когда бот выходит из чата
  - лог о том что бот вышел из чата
  - сделать unit-тесты для сервисов
  - Обернуть сервис TelegramBotService в фасад, который будет ставить отправляемые сообщения в очередь
  - доступ к dozzle по ssl
  - jest matcher closeToDate (на замену toBeCloseTo)
  - учитывать "ответы на"
  - учитывать "пересланные сообщения"
  - учитывать "кто-то зашёл в чат"
  - поправить все TODO
  - если в последнем summary part текста мало, то нужно уменьшать количество пунктов
  - починить баг импорта: `import maxDate from 'date-fns/max';`, `import * as fp from 'fp-ts/lib/function.js';`

Возможно:
  - Поставить APM для сбора логов

Study:
  - Читать книгу "Совершенный код"
  - Изучить API Telegram
  - Почитать про обработку ошибок